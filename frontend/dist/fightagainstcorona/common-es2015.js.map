{"version":3,"sources":["./src/app/counter.service.ts","./src/app/post.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACoB;AAEzB;AACgB;AAMtD,IAAa,cAAc,GAA3B,MAAa,cAAc;IASzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAP5B,YAAO,GAAE,2BAA2B,CAAC;QAC7C,0BAA0B;QAE1B,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IAEsC,CAAC;IAEzC,UAAU,CAAC,QAAa;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC9D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,SAAc;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,SAAc;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,SAAc;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAGD,YAAY,CAAC,SAAc;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,SAAc;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,GAAG,CAAC,CAAC,EAC1B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEnC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAEvD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;CACF;;YAhE2B,+DAAU;;AATzB,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAyE1B;AAzE0B;;;;;;;;;;;;;;;;;;;;;ACVgB;AACoB;AAEzB;AACgB;AAMtD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAStB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAPpC,gDAAgD;QACxC,YAAO,GAAE,KAAK,CAAC;QAEvB,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IAEsC,CAAC;IAEzC,UAAU,CAAC,QAAa;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC9D,0DAAG,CAAC,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAC9C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,WAAW,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;aAC7D,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,OAAO,EAAE,EAAE,CAAC,CAAC,CACjD,CAAC;IACN,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEnC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAEvD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;CACF;;YAhC2B,+DAAU;;AATzB,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAyCvB;AAzCuB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { url } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n \n  private postUrl =`http://localhost:3000/api`;\n  // private postUrl =`api`;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  createPost(postData: any): Observable<any> {\n    let url = this.postUrl + '/counter';\n    return this.http.post<any>(url, postData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  setgamesData(gamesData: any): Observable<any> {\n    let url = this.postUrl + '/post-games';\n    return this.http.post<any>(url, gamesData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  getgamesData(gamesData: any): Observable<any> {\n    let url = this.postUrl + '/get-games';\n    return this.http.post<any>(url, gamesData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  postgamesCountData(gamesData: any): Observable<any> {\n    let url = this.postUrl + '/post-games-count';\n    return this.http.post<any>(url, gamesData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n\n  setCovidData(covidData: any): Observable<any> {\n    let url = this.postUrl + '/admin/post-covid';\n    return this.http.post<any>(url, covidData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  getCovidData(covidData: any): Observable<any> {\n    let url = this.postUrl + '/admin/get-covid';\n    return this.http.post<any>(url, covidData, this.httpOptions).pipe(\n      tap((newpost: any) => { }),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.error(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { url } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  // private postUrl =`http://localhost:3000/api`;\n  private postUrl =`api`;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  createPost(postData: any): Observable<any> {\n    let url = this.postUrl + '/post/create-post';\n    console.log('url', url)\n    return this.http.post<any>(url, postData, this.httpOptions).pipe(\n      tap((newpost: any) => console.log(`new post`)),\n      catchError(this.handleError<any>('errorpost'))\n    );\n  }\n\n  getAllPost(): Observable<any[]> {\n    return this.http.get<any[]>(this.postUrl + '/post/get-all-post')\n      .pipe(\n        tap(_ => console.log('fetched post')),\n        catchError(this.handleError<any[]>('posts', []))\n      );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.error(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}"],"sourceRoot":"webpack:///"}